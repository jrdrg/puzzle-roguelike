;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros, handler-fn puzzle-roguelike.macros}, :excludes #{}, :name puzzle-roguelike.core, :imports nil, :requires {reagent reagent.core, map puzzle-roguelike.map, animations puzzle-roguelike.animations, async cljs.core.async, reagent.core reagent.core, puzzle-roguelike.components puzzle-roguelike.components, cljs.core.async cljs.core.async, state puzzle-roguelike.state, puzzle-roguelike.state puzzle-roguelike.state, c puzzle-roguelike.components, puzzle-roguelike.map puzzle-roguelike.map, puzzle-roguelike.animations puzzle-roguelike.animations}, :uses {<! cljs.core.async, chan cljs.core.async, game-state puzzle-roguelike.state, initialize! puzzle-roguelike.state, >! cljs.core.async, tile-size puzzle-roguelike.components, put! cljs.core.async}, :defs {hp-up {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 122, :column 7, :end-line 122, :end-column 12, :arglists (quote ([hp amount max]))}, :name puzzle-roguelike.core/hp-up, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 12, :method-params ([hp amount max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hp amount max]))}, run-event-loop {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 218, :column 7, :end-line 218, :end-column 21, :arglists (quote ([in-chan])), :doc "Main game event dispatcher. Listen to events on in-chan and dispatch accordingly"}, :name puzzle-roguelike.core/run-event-loop, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 21, :method-params ([in-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([in-chan])), :doc "Main game event dispatcher. Listen to events on in-chan and dispatch accordingly"}, move-player {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 28, :column 7, :end-line 28, :end-column 18, :arglists (quote ([state x y])), :doc "Returns a new state where the player has moved to the specified position"}, :name puzzle-roguelike.core/move-player, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 18, :method-params ([state x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state x y])), :doc "Returns a new state where the player has moved to the specified position"}, handle-attack {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 46, :column 7, :end-line 46, :end-column 20, :arglists (quote ([state enemy [x y] dmg]))}, :name puzzle-roguelike.core/handle-attack, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 20, :method-params ([state enemy p__59506 dmg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state enemy [x y] dmg]))}, game-container {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 240, :column 7, :end-line 240, :end-column 21, :arglists (quote ([])), :doc "Main container for game elements. Starts animation and event loops on first render."}, :name puzzle-roguelike.core/game-container, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Main container for game elements. Starts animation and event loops on first render."}, check-for-next-state {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 191, :column 7, :end-line 191, :end-column 27, :arglists (quote ([state])), :doc "Checks if the current ui/state should be updated (i.e. game over, new game, etc)"}, :name puzzle-roguelike.core/check-for-next-state, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 27, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "Checks if the current ui/state should be updated (i.e. game over, new game, etc)"}, remove-item {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 63, :column 7, :end-line 63, :end-column 18, :arglists (quote ([state [x y]]))}, :name puzzle-roguelike.core/remove-item, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 18, :method-params ([state p__59509]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [x y]]))}, heal-player {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 127, :column 7, :end-line 127, :end-column 18, :arglists (quote ([state]))}, :name puzzle-roguelike.core/heal-player, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, dmg-to-player {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 40, :column 7, :end-line 40, :end-column 20, :arglists (quote ([player dmg]))}, :name puzzle-roguelike.core/dmg-to-player, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 20, :method-params ([player dmg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player dmg]))}, display-message {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 16, :column 7, :end-line 16, :end-column 22, :arglists (quote ([state message])), :doc "Adds message to the message list in state"}, :name puzzle-roguelike.core/display-message, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 22, :method-params ([state message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state message])), :doc "Adds message to the message list in state"}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 264, :column 7, :end-line 264, :end-column 19, :arglists (quote ([]))}, :name puzzle-roguelike.core/on-js-reload, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, subtract-food {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([state amount])), :doc "Subtracts the amount of food from the current player state"}, :name puzzle-roguelike.core/subtract-food, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 20, :method-params ([state amount]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state amount])), :doc "Subtracts the amount of food from the current player state"}, events-chan {:name puzzle-roguelike.core/events-chan, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 13, :column 1, :end-line 13, :end-column 17, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 13, :column 6, :end-line 13, :end-column 17}}, display-ui {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 230, :column 7, :end-line 230, :end-column 17, :arglists (quote ([{:keys [player floor tiles enemies items position messages]}]))}, :name puzzle-roguelike.core/display-ui, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :end-column 17, :method-params ([p__59615]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [player floor tiles enemies items position messages]}]))}, dispatch-event {:name puzzle-roguelike.core/dispatch-event, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 71, :column 1, :end-line 71, :end-column 25, :doc "Returns a new state where the specified action has taken place", :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/core.cljs", :line 71, :column 11, :end-line 71, :end-column 25, :doc "Returns a new state where the specified action has taken place"}}}, :require-macros {am cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, rm puzzle-roguelike.macros, puzzle-roguelike.macros puzzle-roguelike.macros}, :cljs.analyzer/constants {:seen #{:description :dmg :moneybag :key :else :get-item :default :max-hp :move :atk :div.title :recur :type :cause-of-death :level :gold :food :messages :div.container :a.tileset-link :position :player :tiles :def :game-over :hp :xp :enemies :items :coin :main :hierarchy :attack :current-ui :stairs-down :floor :href}, :order [:messages :player :food :position :def :enemies :hp :level :dmg :xp :cause-of-death :description :items :hierarchy :type :default :move :tiles :attack :get-item :atk :recur :else :max-hp :key :coin :gold :moneybag :stairs-down :floor :current-ui :game-over :main :div.container :div.title :a.tileset-link :href]}, :doc nil}