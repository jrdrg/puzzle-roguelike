;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name puzzle-roguelike.map, :imports nil, :requires nil, :uses nil, :defs {possible-enemy-locations {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 105, :column 7, :end-line 105, :end-column 31, :arglists (quote ([map]))}, :name puzzle-roguelike.map/possible-enemy-locations, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 31, :method-params ([map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([map]))}, enemy-map {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([]))}, :name puzzle-roguelike.map/enemy-map, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-tile-at {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 67, :column 7, :end-line 67, :end-column 18, :arglists (quote ([tiles x y])), :doc "Returns the tile at x,y or the first (out-of-bounds) tile if invalid."}, :name puzzle-roguelike.map/get-tile-at, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 18, :method-params ([tiles x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tiles x y])), :doc "Returns the tile at x,y or the first (out-of-bounds) tile if invalid."}, distance {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 73, :column 7, :end-line 73, :end-column 15, :arglists (quote ([[x1 y1] [x2 y2]])), :doc "Manhattan distance between 2 points"}, :name puzzle-roguelike.map/distance, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 15, :method-params ([p__65080 p__65081]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x1 y1] [x2 y2]])), :doc "Manhattan distance between 2 points"}, enemy-data {:name puzzle-roguelike.map/enemy-data, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 26, :column 1, :end-line 26, :end-column 16, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 26, :column 6, :end-line 26, :end-column 16}}, valid-move? {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([x y [pos-x pos-y]])), :doc "True if the given coordinates are a valid move from the current player position"}, :name puzzle-roguelike.map/valid-move?, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 18, :method-params ([x y p__65086]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y [pos-x pos-y]])), :doc "True if the given coordinates are a valid move from the current player position"}, add-enemies-to-map {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 115, :column 7, :end-line 115, :end-column 25, :arglists (quote ([state])), :doc "Adds random enemies to the map. Requires the map to have been previously generated, and needs the state since enemies are stored separately from tiles."}, :name puzzle-roguelike.map/add-enemies-to-map, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 25, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "Adds random enemies to the map. Requires the map to have been previously generated, and needs the state since enemies are stored separately from tiles."}, by-key {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 35, :column 8, :end-line 35, :end-column 14, :private true, :arglists (quote ([items key]))}, :private true, :name puzzle-roguelike.map/by-key, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 14, :method-params ([items key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([items key]))}, entity-keys {:name puzzle-roguelike.map/entity-keys, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 17, :column 1, :end-line 17, :end-column 17, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 17, :column 6, :end-line 17, :end-column 17}}, place-stairs-down {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 96, :column 7, :end-line 96, :end-column 24, :arglists (quote ([map [start-x start-y]])), :doc "Places the stairs on the map at a random point"}, :name puzzle-roguelike.map/place-stairs-down, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 24, :method-params ([map p__65092]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([map [start-x start-y]])), :doc "Places the stairs on the map at a random point"}, tile-keys {:name puzzle-roguelike.map/tile-keys, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}, tile-map {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 44, :column 7, :end-line 44, :end-column 15, :arglists (quote ([]))}, :name puzzle-roguelike.map/tile-map, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, find-stairs-location {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 86, :column 7, :end-line 86, :end-column 27, :arglists (quote ([map start-x start-y])), :doc "Returns the location of the stairs to the next level given the starting position of the player"}, :name puzzle-roguelike.map/find-stairs-location, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 27, :method-params ([map start-x start-y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 3, :fn-var true, :arglists (quote ([map start-x start-y])), :doc "Returns the location of the stairs to the next level given the starting position of the player"}, add-enemy {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 109, :column 7, :end-line 109, :end-column 16, :arglists (quote ([list enemy [pos-x pos-y]])), :doc "Adds an enemy at the given location"}, :name puzzle-roguelike.map/add-enemy, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 16, :method-params ([list enemy p__65097]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 3, :fn-var true, :arglists (quote ([list enemy [pos-x pos-y]])), :doc "Adds an enemy at the given location"}, get-random-tile {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 49, :column 7, :end-line 49, :end-column 22, :arglists (quote ([tiles])), :doc "Returns a random tile from tiles, taking its weight into consideration"}, :name puzzle-roguelike.map/get-random-tile, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 22, :method-params ([tiles]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tiles])), :doc "Returns a random tile from tiles, taking its weight into consideration"}, enemy-keys {:name puzzle-roguelike.map/enemy-keys, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 24, :column 1, :end-line 24, :end-column 16, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 24, :column 6, :end-line 24, :end-column 16}}, entity-data {:name puzzle-roguelike.map/entity-data, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 19, :column 1, :end-line 19, :end-column 17, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 19, :column 6, :end-line 19, :end-column 17}}, tile-data {:name puzzle-roguelike.map/tile-data, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, map-size {:name puzzle-roguelike.map/map-size, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 4, :column 1, :end-line 4, :end-column 14, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 4, :column 6, :end-line 4, :end-column 14}}, keys-and-data {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 30, :column 8, :end-line 30, :end-column 21, :private true, :arglists (quote ([keys data])), :doc "Helper function to map arrays of keys and data into a map structure"}, :private true, :name puzzle-roguelike.map/keys-and-data, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 21, :method-params ([keys data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keys data])), :doc "Helper function to map arrays of keys and data into a map structure"}, get-random-map {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :line 56, :column 7, :end-line 56, :end-column 21, :arglists (quote ([tiles])), :doc "Returns a random map"}, :name puzzle-roguelike.map/get-random-map, :variadic false, :file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/map.cljs", :end-column 21, :method-params ([tiles]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tiles])), :doc "Returns a random map"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:color :key :bat :snake :symbol :background :stairs-up :empty :bounds :level :food :weight :position :tiles :rocks :effect :hp :enemies :coin :water :stairs-down :none :poison}, :order [:key :symbol :background :weight :bounds :stairs-down :stairs-up :empty :water :rocks :color :coin :hp :food :level :effect :bat :none :snake :poison :position :tiles :enemies]}, :doc nil}