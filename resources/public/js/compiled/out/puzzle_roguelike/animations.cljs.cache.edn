;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name puzzle-roguelike.animations, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, state puzzle-roguelike.state, puzzle-roguelike.state puzzle-roguelike.state}, :uses {atom reagent.core, game-state puzzle-roguelike.state}, :defs {last-ts {:name puzzle-roguelike.animations/last-ts, :file "src/puzzle_roguelike/animations.cljs", :line 5, :column 1, :end-line 5, :end-column 13, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/animations.cljs", :line 5, :column 6, :end-line 5, :end-column 13}}, update! {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/animations.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([delta]))}, :name puzzle-roguelike.animations/update!, :variadic false, :file "src/puzzle_roguelike/animations.cljs", :end-column 14, :method-params ([delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([delta]))}, update-game-loop! {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/animations.cljs", :line 11, :column 7, :end-line 11, :end-column 24, :arglists (quote ([ts]))}, :name puzzle-roguelike.animations/update-game-loop!, :variadic false, :file "src/puzzle_roguelike/animations.cljs", :end-column 24, :method-params ([ts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ts]))}, start-game-loop! {:protocol-inline nil, :meta {:file "/Users/john/programmingstuff/clojurescript/puzzle-roguelike/src/puzzle_roguelike/animations.cljs", :line 17, :column 7, :end-line 17, :end-column 23, :arglists (quote ([]))}, :name puzzle-roguelike.animations/start-game-loop!, :variadic false, :file "src/puzzle_roguelike/animations.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:running? :food :player}, :order [:player :food :running?]}, :doc nil}